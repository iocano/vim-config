let mapleader = ','

nnoremap <leader>bp :bprevious<cr>|                                   " go to previous buffer
nnoremap <leader>bn :bnext<cr>|                                   " go to previous buffer
nnoremap <leader>tp :tabprevious<cr>|                                   " go to previous buffer
nnoremap <leader>tn :tabnext<cr>|                                   " go to previous buffer

map <C-J> <C-W>j|                                               " change to bottom window
map <C-K> <C-W>k|                                               " change to top window
map <C-L> <C-W>l|                                               " change to left window
map <C-H> <C-W>h|                                               " change to right window

cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<cr>|           " %% expands to current buffer's path
map <leader>ew :e %%|                                           " open new buffer
map <leader>es :sp %%|                                          " open new buffer (horizontal split)
map <leader>ev :vsp %%|                                         " open new buffer (vertical split)
map <leader>et :tabe %%|                                        " open new buffer (tab)

nnoremap sv :so $MYVIMRC<CR>|                                   " reload vimrc
nnoremap sc :so $MYVIMRC.config<CR>|                            " reload vimrc.config
nnoremap sm :so $MYVIMRC.maps<CR>|                              " reload vimrc.maps
nnoremap sf :so $MYVIMRC.functions<CR>|                         " reload vimrc.functions

nnoremap <F5> :set list! <CR>|                                   " show special characters

nnoremap <leader>so :w<CR>:source $MYVIMRC<CR>                   " save vimrc file and reload

" Testting
nnoremap <leader>p :call utils#PathPrintf("%s/%s", g:vim_dir, "viminfo")<CR>

"Ctrl-^                                                         " soft capslock

" {{{
augroup vim_filetype_maps
    autocmd FileType vim nnoremap <F2> :call CreateFolds()<CR>
augroup END
" }}}
